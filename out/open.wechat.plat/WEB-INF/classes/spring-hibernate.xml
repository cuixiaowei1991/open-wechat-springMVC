<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

   <!-- 加载database.propertise文件到spring容器中 -->
    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:database.properties</value>
            </list>
        </property>
    </bean>
    <!-- 配置dataSource选用c3p0方式 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${dataSource.driverClassName}" />
        <property name="jdbcUrl" value="${dataSource.url}" />
        <property name="user" value="${dataSource.username}" />
        <property name="password" value="${dataSource.password}" />
        <property name="minPoolSize" value="2" /> <!--连接池中保留的最小连接数。 -->
        <property name="maxPoolSize" value="50" /> <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="initialPoolSize" value="10" /> <!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="maxIdleTime" value="60" /> <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="acquireIncrement" value="2" /> <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
    </bean>
    <!-- 配置sessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan">
            <list>
                <!--<value>com.</value>-->
                <value>com.cn.entity</value>
                <!-- 可以加多个包 -->
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.OracleDialect</prop>
                <!--  hibernate.hbm2ddl.auto参数说明
                      validate           加载hibernate时，验证创建数据库表结构
                      reate             每次加载hibernate，重新创建数据库表结构，这就是导致数据库表数据丢失的原因。
                      create-drop        加载hibernate时创建，退出是删除表结构
                      update             加载hibernate自动更新数据库结构
                      none               不更新数据库结构
                -->
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.cache.use_second_level_cache">true</prop>  <!--启用二级缓存 -->
                <prop key="hibernate.cache.use_query_cache">false</prop> <!--缓存查询结果(条件查询时用) -->
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
                <prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext</prop>
            </props>
        </property>
    </bean>

    <!-- 声明式事务 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />

    </bean>
    <!--实体类操作模块 -->
    <bean id="hibernateDao" class="com.cn.dao.util.HibernateDAO">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    
</beans>